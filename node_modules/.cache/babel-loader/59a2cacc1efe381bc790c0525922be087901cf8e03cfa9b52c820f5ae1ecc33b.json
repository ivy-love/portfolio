{"ast":null,"code":"export default {\n  name: \"LayoutHeader\",\n  data() {\n    return {\n      gnbList: ['about', 'work', 'contact'],\n      lastScrollY: 0\n    };\n  },\n  mounted() {\n    this.goMenu();\n    this.handleScroll();\n    // window.addEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    goMenu(section) {\n      const targetSection = document.querySelector(`#${section}-section`);\n      if (targetSection) {\n        targetSection.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      } else {\n        console.error(`'${section}-section' 섹션을 찾을 수 없습니다.`);\n      }\n    },\n    handleScroll() {\n      let header = document.querySelector(\".portfolio-header\");\n      let currentScrollY = window.scrollY;\n      if (currentScrollY === 0 || currentScrollY < this.lastScrollY || currentScrollY < 84) {\n        header.classList.remove(\"is-show\");\n      } else if (currentScrollY > this.lastScrollY) {\n        header.classList.add(\"is-show\");\n      }\n      this.lastScrollY = currentScrollY;\n    }\n  }\n};","map":{"version":3,"names":["name","data","gnbList","lastScrollY","mounted","goMenu","handleScroll","methods","section","targetSection","document","querySelector","scrollIntoView","behavior","console","error","header","currentScrollY","window","scrollY","classList","remove","add"],"sources":["/Users/jiheek/Desktop/doc/개인/250304_포트폴리오/portfiolio/src/views/components/layouts/LayoutHeader.vue"],"sourcesContent":["<template>\r\n  <div class=\"portfolio-header\">\r\n    <div class=\"hd-center\">\r\n      <div class=\"hd-wrap\">\r\n        <h1 class=\"logo\"><a href=\"#\">Kim <br>Jihee</a></h1>\r\n        <nav class=\"gnb-nav\">\r\n          <ul class=\"gnb-menu\">\r\n            <li class=\"gnb-list\" v-for=\"item in gnbList\" :key=\"item\">\r\n              <a href=\"javascript:void(0)\"  class=\"gnb-link\" @click=\"goMenu(item)\">{{ item }}</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"LayoutHeader\",\r\n  data() {\r\n    return {\r\n      gnbList: ['about', 'work', 'contact'],\r\n      lastScrollY: 0,\r\n    }\r\n  },\r\n  mounted () {\r\n    this.goMenu();\r\n    this.handleScroll();\r\n    // window.addEventListener('scroll', this.handleScroll);\r\n  },\r\n  methods: {\r\n    goMenu(section) {\r\n    const targetSection = document.querySelector(`#${section}-section`);\r\n    if (targetSection) {\r\n      targetSection.scrollIntoView({ behavior: \"smooth\" });\r\n    } else {\r\n      console.error(`'${section}-section' 섹션을 찾을 수 없습니다.`);\r\n    }\r\n  },\r\n    handleScroll () {\r\n      let header = document.querySelector(\".portfolio-header\");\r\n      let currentScrollY = window.scrollY;\r\n\r\n      if (currentScrollY === 0 || currentScrollY < this.lastScrollY || currentScrollY < 84) {\r\n        header.classList.remove(\"is-show\");\r\n      } else if(currentScrollY > this.lastScrollY) {\r\n        header.classList.add(\"is-show\");\r\n      }\r\n\r\n      this.lastScrollY = currentScrollY;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"AAiBA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC;MACrCC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACC,MAAM,CAAC,CAAC;IACb,IAAI,CAACC,YAAY,CAAC,CAAC;IACnB;EACF,CAAC;EACDC,OAAO,EAAE;IACPF,MAAMA,CAACG,OAAO,EAAE;MAChB,MAAMC,aAAY,GAAIC,QAAQ,CAACC,aAAa,CAAC,IAAIH,OAAO,UAAU,CAAC;MACnE,IAAIC,aAAa,EAAE;QACjBA,aAAa,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACtD,OAAO;QACLC,OAAO,CAACC,KAAK,CAAC,IAAIP,OAAO,0BAA0B,CAAC;MACtD;IACF,CAAC;IACCF,YAAWA,CAAA,EAAK;MACd,IAAIU,MAAK,GAAIN,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;MACxD,IAAIM,cAAa,GAAIC,MAAM,CAACC,OAAO;MAEnC,IAAIF,cAAa,KAAM,KAAKA,cAAa,GAAI,IAAI,CAACd,WAAU,IAAKc,cAAa,GAAI,EAAE,EAAE;QACpFD,MAAM,CAACI,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;MACpC,OAAO,IAAGJ,cAAa,GAAI,IAAI,CAACd,WAAW,EAAE;QAC3Ca,MAAM,CAACI,SAAS,CAACE,GAAG,CAAC,SAAS,CAAC;MACjC;MAEA,IAAI,CAACnB,WAAU,GAAIc,cAAc;IACnC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}