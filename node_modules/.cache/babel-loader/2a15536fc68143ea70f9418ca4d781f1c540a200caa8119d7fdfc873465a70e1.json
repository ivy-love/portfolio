{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createTextVNode(\" 컴포넌트 \")), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.close && $options.close(...args))\n  }, \"닫기\")])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$props","isVisible","_createElementBlock","_hoisted_1","_createTextVNode","_createElementVNode","onClick","_cache","args","$options","close","_createCommentVNode"],"sources":["/Users/jiheek/Desktop/doc/private/250304_portfolio/portfiolio/src/views/components/ModalCompo.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal\" v-if=\"isVisible\">\r\n    컴포넌트\r\n    <button @click=\"close\">닫기</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ModalCompo',\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      default: false,\r\n    }\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.$emit('closeModal')\r\n      console.log('test')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";;EAAAA,GAAA;EACOC,KAAK,EAAC;;;SAAcC,MAAA,CAAAC,SAAS,I,cAAlCC,mBAAA,CAGM,OAHNC,UAGM,G,0BAJRC,gBAAA,CACsC,QAElC,IAAAC,mBAAA,CAAkC;IAAzBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,IAAE,E,KAH7BG,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}