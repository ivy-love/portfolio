{"ast":null,"code":"import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport { Swiper, SwiperSlide } from 'swiper/vue';\nimport 'swiper/swiper-bundle.css';\nimport 'swiper/css';\nimport LayoutHeader from \"./views/components/layouts/LayoutHeader.vue\";\nimport LayoutFooter from \"./views/components/layouts/LayoutFooter.vue\";\nimport routers from \"./router/index.js\"; // router import\nimport 'aos/dist/aos.css'; // AOS 스타일 파일 불러오기\nimport AOS from 'aos'; // AOS 라이브러리 불러오기\nimport Lenis from '@studio-freight/lenis';\n\n// AOS 초기화\nAOS.init({\n  duration: 1000,\n  // 애니메이션 지속 시간\n  once: false // 한 번만 애니메이션 적용\n});\n\n// 위 createApp 코드 아래처럼 변경\nconst app = createApp(App);\napp.use(routers); // router 추가\napp.component('Swiper', Swiper);\napp.component('SwiperSlide', SwiperSlide);\napp.component('LayoutHeader', LayoutHeader); // 글로벌 헤더 컴포넌트 추가\napp.component('LayoutFooter', LayoutFooter); // 글로벌 헤더 컴포넌트 추가\napp.mount(\"#app\");\nconst lenis = new Lenis();\nlenis.on('scroll', e => {\n  console.log(e);\n});\nfunction raf(time) {\n  lenis.raf(time);\n  requestAnimationFrame(raf);\n}\nrequestAnimationFrame(raf);","map":{"version":3,"names":["createApp","App","Swiper","SwiperSlide","LayoutHeader","LayoutFooter","routers","AOS","Lenis","init","duration","once","app","use","component","mount","lenis","on","e","console","log","raf","time","requestAnimationFrame"],"sources":["/Users/jiheek/Desktop/doc/private/250304_portfolio/portfiolio/src/main.js"],"sourcesContent":["import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport { Swiper, SwiperSlide } from 'swiper/vue';\nimport 'swiper/swiper-bundle.css';\nimport 'swiper/css';\nimport LayoutHeader from \"./views/components/layouts/LayoutHeader.vue\"\nimport LayoutFooter from \"./views/components/layouts/LayoutFooter.vue\"\nimport routers from \"./router/index.js\"; // router import\nimport 'aos/dist/aos.css';  // AOS 스타일 파일 불러오기\nimport AOS from 'aos';       // AOS 라이브러리 불러오기\nimport Lenis from '@studio-freight/lenis'\n\n// AOS 초기화\nAOS.init({\n  duration: 1000,  // 애니메이션 지속 시간\n  once: false,      // 한 번만 애니메이션 적용\n});\n\n// 위 createApp 코드 아래처럼 변경\nconst app = createApp(App);\napp.use(routers); // router 추가\napp.component('Swiper', Swiper);\napp.component('SwiperSlide', SwiperSlide);\napp.component('LayoutHeader', LayoutHeader); // 글로벌 헤더 컴포넌트 추가\napp.component('LayoutFooter', LayoutFooter); // 글로벌 헤더 컴포넌트 추가\napp.mount(\"#app\");\n\nconst lenis = new Lenis()\n\nlenis.on('scroll', (e) => {\n  console.log(e)\n})\n\nfunction raf(time) {\n  lenis.raf(time)\n  requestAnimationFrame(raf)\n}\n\nrequestAnimationFrame(raf)\n\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,MAAM,EAAEC,WAAW,QAAQ,YAAY;AAChD,OAAO,0BAA0B;AACjC,OAAO,YAAY;AACnB,OAAOC,YAAY,MAAM,6CAA6C;AACtE,OAAOC,YAAY,MAAM,6CAA6C;AACtE,OAAOC,OAAO,MAAM,mBAAmB,CAAC,CAAC;AACzC,OAAO,kBAAkB,CAAC,CAAE;AAC5B,OAAOC,GAAG,MAAM,KAAK,CAAC,CAAO;AAC7B,OAAOC,KAAK,MAAM,uBAAuB;;AAEzC;AACAD,GAAG,CAACE,IAAI,CAAC;EACPC,QAAQ,EAAE,IAAI;EAAG;EACjBC,IAAI,EAAE,KAAK,CAAO;AACpB,CAAC,CAAC;;AAEF;AACA,MAAMC,GAAG,GAAGZ,SAAS,CAACC,GAAG,CAAC;AAC1BW,GAAG,CAACC,GAAG,CAACP,OAAO,CAAC,CAAC,CAAC;AAClBM,GAAG,CAACE,SAAS,CAAC,QAAQ,EAAEZ,MAAM,CAAC;AAC/BU,GAAG,CAACE,SAAS,CAAC,aAAa,EAAEX,WAAW,CAAC;AACzCS,GAAG,CAACE,SAAS,CAAC,cAAc,EAAEV,YAAY,CAAC,CAAC,CAAC;AAC7CQ,GAAG,CAACE,SAAS,CAAC,cAAc,EAAET,YAAY,CAAC,CAAC,CAAC;AAC7CO,GAAG,CAACG,KAAK,CAAC,MAAM,CAAC;AAEjB,MAAMC,KAAK,GAAG,IAAIR,KAAK,CAAC,CAAC;AAEzBQ,KAAK,CAACC,EAAE,CAAC,QAAQ,EAAGC,CAAC,IAAK;EACxBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;AAChB,CAAC,CAAC;AAEF,SAASG,GAAGA,CAACC,IAAI,EAAE;EACjBN,KAAK,CAACK,GAAG,CAACC,IAAI,CAAC;EACfC,qBAAqB,CAACF,GAAG,CAAC;AAC5B;AAEAE,qBAAqB,CAACF,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}